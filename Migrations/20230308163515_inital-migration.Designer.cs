// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lagalt_back_end.Data;

#nullable disable

namespace lagalt_web_api.Migrations
{
    [DbContext(typeof(LagaltDbContext))]
    [Migration("20230308163515_inital-migration")]
    partial class initalmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AdminProject", b =>
                {
                    b.Property<int>("AdminsId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("AdminsId", "ProjectsId");

                    b.HasIndex("ProjectsId");

                    b.ToTable("AdminProject");
                });

            modelBuilder.Entity("ContributorProject", b =>
                {
                    b.Property<int>("ContributorsId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("ContributorsId", "ProjectsId");

                    b.HasIndex("ProjectsId");

                    b.ToTable("ContributorProject");
                });

            modelBuilder.Entity("lagalt_back_end.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MotivationLetter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("lagalt_back_end.Models.HistoricEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("lagalt_back_end.Models.ImageUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ImageUrls");
                });

            modelBuilder.Entity("lagalt_back_end.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GitURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 3,
                            Description = "Joachim Rønning",
                            GitURL = "https://prod-ripcut-delivery.disney-plus.net/v1/variant/disney/C6AB0EDCE8F41882EBBB782B76DD4F05D7E360D7C3F23B4F6D02C24699B26105/scale?width=1200&aspectRatio=1.78&format=jpeg",
                            Name = "Tinder v2",
                            Progress = 0
                        },
                        new
                        {
                            Id = 2,
                            Category = 3,
                            Description = "Looking for a c# back-end developer",
                            GitURL = "https://gitlab.com/Frechr/assignment-three/-/tree/master/",
                            Name = "EF_CodeFirst",
                            Progress = 0
                        },
                        new
                        {
                            Id = 3,
                            Category = 3,
                            Description = "Web app to catch pokemons!",
                            GitURL = "https://gitlab.com/JarandNL/angular_pokemontrainer",
                            Name = "Exciting_Angular_Project",
                            Progress = 1
                        },
                        new
                        {
                            Id = 4,
                            Category = 1,
                            Description = "Hot youth!!!!",
                            GitURL = "https://www.imdb.com/title/tt0475293/",
                            Name = "High School Musical",
                            Progress = 3
                        },
                        new
                        {
                            Id = 5,
                            Category = 0,
                            Description = "Pls help make the best song ever",
                            Name = "Best song ever!!!",
                            Progress = 1
                        });
                });

            modelBuilder.Entity("lagalt_back_end.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("lagalt_back_end.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivationLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UserStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("ProjectSkill", b =>
                {
                    b.Property<int>("NeededSkillsId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("NeededSkillsId", "ProjectsId");

                    b.HasIndex("ProjectsId");

                    b.ToTable("ProjectSkill");
                });

            modelBuilder.Entity("SkillUser", b =>
                {
                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("SkillsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("SkillUser");
                });

            modelBuilder.Entity("lagalt_back_end.Models.Admin", b =>
                {
                    b.HasBaseType("lagalt_back_end.Models.User");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("lagalt_back_end.Models.Contributor", b =>
                {
                    b.HasBaseType("lagalt_back_end.Models.User");

                    b.HasDiscriminator().HasValue("Contributor");
                });

            modelBuilder.Entity("AdminProject", b =>
                {
                    b.HasOne("lagalt_back_end.Models.Admin", null)
                        .WithMany()
                        .HasForeignKey("AdminsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lagalt_back_end.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ContributorProject", b =>
                {
                    b.HasOne("lagalt_back_end.Models.Contributor", null)
                        .WithMany()
                        .HasForeignKey("ContributorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lagalt_back_end.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("lagalt_back_end.Models.Application", b =>
                {
                    b.HasOne("lagalt_back_end.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lagalt_back_end.Models.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("lagalt_back_end.Models.HistoricEvent", b =>
                {
                    b.HasOne("lagalt_back_end.Models.User", null)
                        .WithMany("HistoricEvents")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("lagalt_back_end.Models.ImageUrl", b =>
                {
                    b.HasOne("lagalt_back_end.Models.Project", null)
                        .WithMany("ImageURLs")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("ProjectSkill", b =>
                {
                    b.HasOne("lagalt_back_end.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("NeededSkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lagalt_back_end.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillUser", b =>
                {
                    b.HasOne("lagalt_back_end.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lagalt_back_end.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("lagalt_back_end.Models.Project", b =>
                {
                    b.Navigation("ImageURLs");
                });

            modelBuilder.Entity("lagalt_back_end.Models.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("HistoricEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
